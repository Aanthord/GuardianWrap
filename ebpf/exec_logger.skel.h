/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __EXEC_LOGGER_SKEL_H__
#define __EXEC_LOGGER_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct exec_logger {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *file_op_events;
		struct bpf_map *rodata_str1_1;
	} maps;
	struct {
		struct bpf_program *trace_enter_open;
	} progs;
	struct {
		struct bpf_link *trace_enter_open;
	} links;

#ifdef __cplusplus
	static inline struct exec_logger *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct exec_logger *open_and_load();
	static inline int load(struct exec_logger *skel);
	static inline int attach(struct exec_logger *skel);
	static inline void detach(struct exec_logger *skel);
	static inline void destroy(struct exec_logger *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
exec_logger__destroy(struct exec_logger *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
exec_logger__create_skeleton(struct exec_logger *obj);

static inline struct exec_logger *
exec_logger__open_opts(const struct bpf_object_open_opts *opts)
{
	struct exec_logger *obj;
	int err;

	obj = (struct exec_logger *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = exec_logger__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	exec_logger__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct exec_logger *
exec_logger__open(void)
{
	return exec_logger__open_opts(NULL);
}

static inline int
exec_logger__load(struct exec_logger *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct exec_logger *
exec_logger__open_and_load(void)
{
	struct exec_logger *obj;
	int err;

	obj = exec_logger__open();
	if (!obj)
		return NULL;
	err = exec_logger__load(obj);
	if (err) {
		exec_logger__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
exec_logger__attach(struct exec_logger *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
exec_logger__detach(struct exec_logger *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *exec_logger__elf_bytes(size_t *sz);

static inline int
exec_logger__create_skeleton(struct exec_logger *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "exec_logger";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "file_op_events";
	s->maps[0].map = &obj->maps.file_op_events;

	s->maps[1].name = ".rodata.str1.1";
	s->maps[1].map = &obj->maps.rodata_str1_1;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "trace_enter_open";
	s->progs[0].prog = &obj->progs.trace_enter_open;
	s->progs[0].link = &obj->links.trace_enter_open;

	s->data = (void *)exec_logger__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *exec_logger__elf_bytes(size_t *sz)
{
	*sz = 8176;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xf0\x18\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1c\0\
\x01\0\xbf\x16\0\0\0\0\0\0\xb7\x07\0\0\0\0\0\0\x63\x7a\xf8\xff\0\0\0\0\x63\x7a\
\xf4\xff\0\0\0\0\x63\x7a\xf0\xff\0\0\0\0\x63\x7a\xec\xff\0\0\0\0\x63\x7a\xe8\
\xff\0\0\0\0\x63\x7a\xe4\xff\0\0\0\0\x63\x7a\xe0\xff\0\0\0\0\x63\x7a\xdc\xff\0\
\0\0\0\x63\x7a\xd8\xff\0\0\0\0\x63\x7a\xd4\xff\0\0\0\0\x63\x7a\xd0\xff\0\0\0\0\
\x63\x7a\xcc\xff\0\0\0\0\x63\x7a\xc8\xff\0\0\0\0\x63\x7a\xc4\xff\0\0\0\0\x63\
\x7a\xc0\xff\0\0\0\0\x63\x7a\xbc\xff\0\0\0\0\x63\x7a\xb8\xff\0\0\0\0\x63\x7a\
\xb4\xff\0\0\0\0\x63\x7a\xb0\xff\0\0\0\0\x63\x7a\xac\xff\0\0\0\0\x63\x7a\xa8\
\xff\0\0\0\0\x63\x7a\xa4\xff\0\0\0\0\x63\x7a\xa0\xff\0\0\0\0\x63\x7a\x9c\xff\0\
\0\0\0\x63\x7a\x98\xff\0\0\0\0\x63\x7a\x94\xff\0\0\0\0\x63\x7a\x90\xff\0\0\0\0\
\x63\x7a\x8c\xff\0\0\0\0\x63\x7a\x88\xff\0\0\0\0\x63\x7a\x84\xff\0\0\0\0\x63\
\x7a\x80\xff\0\0\0\0\x63\x7a\x7c\xff\0\0\0\0\x63\x7a\x78\xff\0\0\0\0\x63\x7a\
\x74\xff\0\0\0\0\x63\x7a\x70\xff\0\0\0\0\x63\x7a\x6c\xff\0\0\0\0\x63\x7a\x68\
\xff\0\0\0\0\x63\x7a\x64\xff\0\0\0\0\x63\x7a\x60\xff\0\0\0\0\x63\x7a\x5c\xff\0\
\0\0\0\x63\x7a\x58\xff\0\0\0\0\x63\x7a\x54\xff\0\0\0\0\x63\x7a\x50\xff\0\0\0\0\
\x63\x7a\x4c\xff\0\0\0\0\x63\x7a\x48\xff\0\0\0\0\x63\x7a\x44\xff\0\0\0\0\x63\
\x7a\x40\xff\0\0\0\0\x63\x7a\x3c\xff\0\0\0\0\x63\x7a\x38\xff\0\0\0\0\x63\x7a\
\x34\xff\0\0\0\0\x63\x7a\x30\xff\0\0\0\0\x63\x7a\x2c\xff\0\0\0\0\x63\x7a\x28\
\xff\0\0\0\0\x63\x7a\x24\xff\0\0\0\0\x63\x7a\x20\xff\0\0\0\0\x63\x7a\x1c\xff\0\
\0\0\0\x63\x7a\x18\xff\0\0\0\0\x63\x7a\x14\xff\0\0\0\0\x63\x7a\x10\xff\0\0\0\0\
\x63\x7a\x0c\xff\0\0\0\0\x63\x7a\x08\xff\0\0\0\0\x63\x7a\x04\xff\0\0\0\0\x63\
\x7a\0\xff\0\0\0\0\x63\x7a\xfc\xfe\0\0\0\0\x63\x7a\xf8\xfe\0\0\0\0\x63\x7a\xf4\
\xfe\0\0\0\0\x63\x7a\xf0\xfe\0\0\0\0\x63\x7a\xec\xfe\0\0\0\0\x85\0\0\0\x0e\0\0\
\0\x77\0\0\0\x20\0\0\0\x63\x0a\xe8\xfe\0\0\0\0\x79\x63\x10\0\0\0\0\0\xbf\xa1\0\
\0\0\0\0\0\x07\x01\0\0\xec\xfe\xff\xff\xb7\x02\0\0\0\x01\0\0\x85\0\0\0\x72\0\0\
\0\xb7\x01\0\0\x6f\x70\x65\x6e\x63\x1a\xec\xff\0\0\0\0\x73\x7a\xf0\xff\0\0\0\0\
\xbf\xa4\0\0\0\0\0\0\x07\x04\0\0\xe8\xfe\xff\xff\xbf\x61\0\0\0\0\0\0\x18\x02\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x03\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xb7\x05\
\0\0\x14\x01\0\0\x85\0\0\0\x19\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x6f\
\x70\x65\x6e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x47\x50\x4c\0\x24\0\0\0\x05\0\x08\0\x02\0\0\0\x08\0\0\0\x14\0\0\0\x04\0\
\x08\x01\x51\x04\x08\xe0\x05\x01\x56\0\x04\xb8\x04\xc0\x04\x01\x50\0\x01\x11\
\x01\x25\x25\x13\x05\x03\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\
\x8c\x01\x17\0\0\x02\x34\0\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\
\x03\x01\x01\x49\x13\0\0\x04\x21\0\x49\x13\x37\x0b\0\0\x05\x24\0\x03\x25\x3e\
\x0b\x0b\x0b\0\0\x06\x24\0\x03\x25\x0b\x0b\x3e\x0b\0\0\x07\x13\x01\x0b\x0b\x3a\
\x0b\x3b\x0b\0\0\x08\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x09\x0f\
\0\x49\x13\0\0\x0a\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\0\0\x0b\x15\0\x49\x13\
\x27\x19\0\0\x0c\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x0d\x15\x01\x49\x13\
\x27\x19\0\0\x0e\x05\0\x49\x13\0\0\x0f\x0f\0\0\0\x10\x26\0\0\0\x11\x04\x01\x49\
\x13\x0b\x0b\x3a\x0b\x3b\x05\0\0\x12\x28\0\x03\x25\x1c\x0f\0\0\x13\x2e\x01\x11\
\x1b\x12\x06\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\
\0\x14\x05\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x15\x34\0\x02\x18\x03\
\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x16\x34\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\
\x13\0\0\x17\x13\x01\x03\x25\x0b\x05\x3a\x0b\x3b\x0b\0\0\x18\x0d\0\x03\x25\x49\
\x13\x3a\x0b\x3b\x0b\x38\x05\0\0\x19\x21\0\x49\x13\x37\x05\0\0\x1a\x13\x01\x03\
\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x1b\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\x38\
\x0b\0\0\0\x35\x02\0\0\x05\0\x01\x08\0\0\0\0\x01\0\x0c\0\x01\x08\0\0\0\0\0\0\0\
\x02\x02\xe0\x02\0\0\x08\0\0\0\x0c\0\0\0\x02\x03\x32\0\0\0\0\x27\x02\xa1\0\x03\
\x3e\0\0\0\x04\x42\0\0\0\x04\0\x05\x04\x06\x01\x06\x05\x08\x07\x02\x06\x51\0\0\
\0\0\x0b\x02\xa1\x01\x07\x20\0\x06\x08\x07\x7a\0\0\0\0\x07\0\x08\x09\x7a\0\0\0\
\0\x08\x08\x08\x0a\x7a\0\0\0\0\x09\x10\x08\x0b\x8f\0\0\0\0\x0a\x18\0\x09\x7f\0\
\0\0\x03\x8b\0\0\0\x04\x42\0\0\0\x04\0\x05\x08\x05\x04\x09\x94\0\0\0\x03\x8b\0\
\0\0\x04\x42\0\0\0\x80\0\x0a\x0c\xa9\0\0\0\x02\x69\x01\x09\xae\0\0\0\x0b\xb3\0\
\0\0\x0c\xbb\0\0\0\x0e\x01\x12\x05\x0d\x07\x08\x0a\x0f\xc8\0\0\0\x02\xef\x0a\
\x09\xcd\0\0\0\x0d\xe2\0\0\0\x0e\xe6\0\0\0\x0e\xe7\0\0\0\x0e\xf3\0\0\0\0\x05\
\x10\x05\x08\x0f\x0c\xef\0\0\0\x12\x01\x0e\x05\x11\x07\x04\x09\xf8\0\0\0\x10\
\x0a\x13\x02\x01\0\0\x02\xad\x02\x09\x07\x01\0\0\x0d\xe2\0\0\0\x0e\xe6\0\0\0\
\x0e\xe6\0\0\0\x0e\xb3\0\0\0\x0e\xe6\0\0\0\x0e\xb3\0\0\0\0\x11\x48\x01\0\0\x08\
\x01\xab\x73\x12\x15\xff\xff\xff\xff\x0f\x12\x16\xff\xff\xff\xff\x0f\x12\x17\
\x80\x80\x80\x80\xf0\xff\xff\x07\0\x05\x14\x07\x08\x03\x48\x01\0\0\x04\x42\0\0\
\0\x06\0\x13\x02\xe0\x02\0\0\x01\x5a\x18\0\x16\x8b\0\0\0\x14\0\x1e\0\x16\xc1\
\x01\0\0\x15\x02\x91\0\x19\0\x17\x85\x01\0\0\x16\x01\x29\0\x18\xb3\0\0\0\0\x17\
\x1d\x14\x01\0\x0e\x08\x1a\xe7\0\0\0\0\x0f\0\x08\x1b\xa8\x01\0\0\0\x10\x04\x18\
\x1c\xb5\x01\0\0\0\x11\x04\x01\0\x03\x3e\0\0\0\x19\x42\0\0\0\0\x01\0\x03\x3e\0\
\0\0\x04\x42\0\0\0\x10\0\x09\xc6\x01\0\0\x1a\x28\x40\x01\xdf\x5b\x1b\x1f\xf5\
\x01\0\0\x01\xe0\x5b\0\x1b\x25\xe2\0\0\0\x01\xe1\x5b\x08\x1b\x26\x4c\x01\0\0\
\x01\xe2\x5b\x10\x1b\x27\x2c\x02\0\0\x01\xe3\x5b\x40\0\x1a\x24\x08\x01\xb9\x16\
\x1b\x07\x24\x02\0\0\x01\xba\x16\0\x1b\x21\x28\x02\0\0\x01\xbb\x16\x02\x1b\x23\
\x28\x02\0\0\x01\xbc\x16\x03\x1b\x1a\x8b\0\0\0\x01\xbd\x16\x04\0\x05\x20\x07\
\x02\x05\x22\x08\x01\x03\x3e\0\0\0\x04\x42\0\0\0\0\0\0\xac\0\0\0\x05\0\0\0\0\0\
\0\0\x27\0\0\0\x3e\0\0\0\x54\0\0\0\x5c\0\0\0\x61\0\0\0\x75\0\0\0\x84\0\0\0\x89\
\0\0\0\x8d\0\0\0\x96\0\0\0\xa1\0\0\0\xad\0\0\0\xc6\0\0\0\xd9\0\0\0\xdf\0\0\0\
\xf7\0\0\0\xfc\0\0\0\x09\x01\0\0\x0f\x01\0\0\x25\x01\0\0\x33\x01\0\0\x44\x01\0\
\0\x56\x01\0\0\x68\x01\0\0\x79\x01\0\0\x7f\x01\0\0\x83\x01\0\0\x8c\x01\0\0\x96\
\x01\0\0\xa6\x01\0\0\xaa\x01\0\0\xae\x01\0\0\xbd\x01\0\0\xc3\x01\0\0\xd1\x01\0\
\0\xdf\x01\0\0\xeb\x01\0\0\xee\x01\0\0\xf3\x01\0\0\xfa\x01\0\0\x14\x02\0\0\x55\
\x62\x75\x6e\x74\x75\x20\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\
\x20\x31\x34\x2e\x30\x2e\x30\x2d\x31\x75\x62\x75\x6e\x74\x75\x31\x2e\x31\0\x65\
\x62\x70\x66\x2f\x65\x78\x65\x63\x5f\x6c\x6f\x67\x67\x65\x72\x2e\x62\x70\x66\
\x2e\x63\0\x2f\x6f\x70\x74\x2f\x64\x65\x76\x2f\x47\x75\x61\x72\x64\x69\x61\x6e\
\x57\x72\x61\x70\0\x4c\x49\x43\x45\x4e\x53\x45\0\x63\x68\x61\x72\0\x5f\x5f\x41\
\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x66\x69\x6c\
\x65\x5f\x6f\x70\x5f\x65\x76\x65\x6e\x74\x73\0\x74\x79\x70\x65\0\x69\x6e\x74\0\
\x6b\x65\x79\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\
\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x62\x70\x66\x5f\x67\x65\x74\x5f\
\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\x64\0\x75\x6e\x73\
\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\
\x34\0\x62\x70\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\x65\x61\x64\x5f\x75\x73\x65\
\x72\x5f\x73\x74\x72\0\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\
\x69\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x62\x70\x66\x5f\x70\x65\x72\x66\x5f\x65\
\x76\x65\x6e\x74\x5f\x6f\x75\x74\x70\x75\x74\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x6c\x6f\x6e\x67\0\x42\x50\x46\x5f\x46\x5f\x49\x4e\x44\x45\x58\x5f\x4d\x41\
\x53\x4b\0\x42\x50\x46\x5f\x46\x5f\x43\x55\x52\x52\x45\x4e\x54\x5f\x43\x50\x55\
\0\x42\x50\x46\x5f\x46\x5f\x43\x54\x58\x4c\x45\x4e\x5f\x4d\x41\x53\x4b\0\x74\
\x72\x61\x63\x65\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\0\x65\x76\x65\x6e\
\x74\0\x70\x69\x64\0\x66\x69\x6c\x65\x6e\x61\x6d\x65\0\x6f\x70\x65\x72\x61\x74\
\x69\x6f\x6e\0\x66\x69\x6c\x65\x5f\x6f\x70\x5f\x65\x76\x65\x6e\x74\x5f\x74\0\
\x63\x74\x78\0\x65\x6e\x74\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\
\x72\x74\0\x66\x6c\x61\x67\x73\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x63\x68\
\x61\x72\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\0\x74\x72\x61\
\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x69\x64\0\x61\x72\x67\x73\0\x5f\x5f\x64\x61\
\x74\x61\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x73\
\x79\x73\x5f\x65\x6e\x74\x65\x72\0\x70\x69\x64\x5f\x74\x67\x69\x64\0\x1c\0\0\0\
\x05\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\
\x18\0\0\0\0\0\0\0\x30\x02\0\0\x30\x02\0\0\x16\x03\0\0\0\0\0\0\0\0\0\x02\x03\0\
\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\
\0\0\x04\0\0\0\x04\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\
\x02\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x80\0\0\0\0\0\0\0\
\x04\0\0\x04\x20\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x01\0\0\0\x40\0\0\
\0\x27\0\0\0\x01\0\0\0\x80\0\0\0\x32\0\0\0\x05\0\0\0\xc0\0\0\0\x3e\0\0\0\0\0\0\
\x0e\x07\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x0a\0\0\0\x4d\0\0\0\x04\0\0\x04\x40\
\0\0\0\x67\0\0\0\x0b\0\0\0\0\0\0\0\x6b\0\0\0\x0e\0\0\0\x40\0\0\0\x6e\0\0\0\x10\
\0\0\0\x80\0\0\0\x73\0\0\0\x12\0\0\0\0\x02\0\0\x7a\0\0\0\x04\0\0\x04\x08\0\0\0\
\x19\0\0\0\x0c\0\0\0\0\0\0\0\x86\0\0\0\x0d\0\0\0\x10\0\0\0\x8c\0\0\0\x0d\0\0\0\
\x18\0\0\0\x9a\0\0\0\x02\0\0\0\x20\0\0\0\x9e\0\0\0\0\0\0\x01\x02\0\0\0\x10\0\0\
\0\xad\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\0\xbb\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\
\0\x01\xc0\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0f\0\
\0\0\x04\0\0\0\x06\0\0\0\xce\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\
\0\x03\0\0\0\0\x11\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xd3\0\
\0\0\x09\0\0\0\xd7\0\0\0\x01\0\0\x0c\x13\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x11\0\
\0\0\x04\0\0\0\x04\0\0\0\0\x03\0\0\0\0\0\x0e\x15\0\0\0\x01\0\0\0\x08\x03\0\0\
\x01\0\0\x0f\0\0\0\0\x08\0\0\0\0\0\0\0\x20\0\0\0\x0e\x03\0\0\x01\0\0\x0f\0\0\0\
\0\x16\0\0\0\0\0\0\0\x04\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\
\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6b\x65\x79\
\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x6d\x61\x78\
\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x66\x69\x6c\x65\x5f\x6f\x70\x5f\x65\x76\x65\
\x6e\x74\x73\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\
\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\0\x65\x6e\x74\0\x69\x64\0\x61\x72\x67\x73\
\0\x5f\x5f\x64\x61\x74\x61\0\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x66\
\x6c\x61\x67\x73\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\0\x70\
\x69\x64\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x63\x68\x61\x72\0\x6c\x6f\x6e\x67\0\x75\x6e\x73\
\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x63\x68\x61\x72\0\x63\x74\x78\0\x74\
\x72\x61\x63\x65\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\0\x74\x72\x61\x63\
\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\
\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\0\x2f\x6f\x70\x74\x2f\x64\x65\x76\
\x2f\x47\x75\x61\x72\x64\x69\x61\x6e\x57\x72\x61\x70\x2f\x65\x62\x70\x66\x2f\
\x65\x78\x65\x63\x5f\x6c\x6f\x67\x67\x65\x72\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\
\x74\x20\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\x28\
\x73\x74\x72\x75\x63\x74\x20\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\
\x72\x61\x77\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x20\x2a\x63\x74\x78\x29\
\x20\x7b\0\x20\x20\x20\x20\x73\x74\x72\x75\x63\x74\x20\x66\x69\x6c\x65\x5f\x6f\
\x70\x5f\x65\x76\x65\x6e\x74\x5f\x74\x20\x65\x76\x65\x6e\x74\x20\x3d\x20\x7b\
\x7d\x3b\0\x20\x20\x20\x20\x5f\x5f\x75\x36\x34\x20\x70\x69\x64\x5f\x74\x67\x69\
\x64\x20\x3d\x20\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\
\x5f\x70\x69\x64\x5f\x74\x67\x69\x64\x28\x29\x3b\0\x20\x20\x20\x20\x65\x76\x65\
\x6e\x74\x2e\x70\x69\x64\x20\x3d\x20\x28\x5f\x5f\x75\x33\x32\x29\x28\x70\x69\
\x64\x5f\x74\x67\x69\x64\x20\x3e\x3e\x20\x33\x32\x29\x3b\0\x30\x3a\x32\x3a\x30\
\0\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\x65\x61\x64\x5f\
\x75\x73\x65\x72\x5f\x73\x74\x72\x28\x65\x76\x65\x6e\x74\x2e\x66\x69\x6c\x65\
\x6e\x61\x6d\x65\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x65\x76\x65\x6e\x74\x2e\
\x66\x69\x6c\x65\x6e\x61\x6d\x65\x29\x2c\x20\x28\x76\x6f\x69\x64\x20\x2a\x29\
\x63\x74\x78\x2d\x3e\x61\x72\x67\x73\x5b\x30\x5d\x29\x3b\0\x20\x20\x20\x20\x5f\
\x5f\x62\x75\x69\x6c\x74\x69\x6e\x5f\x6d\x65\x6d\x63\x70\x79\x28\x65\x76\x65\
\x6e\x74\x2e\x6f\x70\x65\x72\x61\x74\x69\x6f\x6e\x2c\x20\x22\x6f\x70\x65\x6e\
\x22\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x22\x6f\x70\x65\x6e\x22\x29\x29\x3b\0\
\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x5f\
\x6f\x75\x74\x70\x75\x74\x28\x63\x74\x78\x2c\x20\x26\x66\x69\x6c\x65\x5f\x6f\
\x70\x5f\x65\x76\x65\x6e\x74\x73\x2c\x20\x42\x50\x46\x5f\x46\x5f\x43\x55\x52\
\x52\x45\x4e\x54\x5f\x43\x50\x55\x2c\x20\x26\x65\x76\x65\x6e\x74\x2c\x20\x73\
\x69\x7a\x65\x6f\x66\x28\x65\x76\x65\x6e\x74\x29\x29\x3b\0\x20\x20\x20\x20\x72\
\x65\x74\x75\x72\x6e\x20\x30\x3b\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2e\x6d\x61\
\x70\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\
\x14\0\0\0\x14\0\0\0\xcc\0\0\0\xe0\0\0\0\x1c\0\0\0\x08\0\0\0\xe8\0\0\0\x01\0\0\
\0\0\0\0\0\x14\0\0\0\x10\0\0\0\xe8\0\0\0\x0c\0\0\0\0\0\0\0\x0b\x01\0\0\x38\x01\
\0\0\0\x58\0\0\x10\0\0\0\x0b\x01\0\0\x76\x01\0\0\x1c\x5c\0\0\x30\x02\0\0\x0b\
\x01\0\0\x9d\x01\0\0\x16\x60\0\0\x38\x02\0\0\x0b\x01\0\0\xce\x01\0\0\x22\x64\0\
\0\x40\x02\0\0\x0b\x01\0\0\xce\x01\0\0\x0f\x64\0\0\x48\x02\0\0\x0b\x01\0\0\xfd\
\x01\0\0\x4d\x70\0\0\x50\x02\0\0\x0b\x01\0\0\x76\x01\0\0\x1c\x5c\0\0\x60\x02\0\
\0\x0b\x01\0\0\xfd\x01\0\0\x05\x70\0\0\x78\x02\0\0\x0b\x01\0\0\x58\x02\0\0\x05\
\x78\0\0\x90\x02\0\0\x0b\x01\0\0\0\0\0\0\0\0\0\0\x98\x02\0\0\x0b\x01\0\0\x97\
\x02\0\0\x05\x84\0\0\xd0\x02\0\0\x0b\x01\0\0\xf2\x02\0\0\x05\x8c\0\0\x10\0\0\0\
\xe8\0\0\0\x01\0\0\0\x48\x02\0\0\x0a\0\0\0\xf7\x01\0\0\0\0\0\0\0\0\0\0\x0c\0\0\
\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xe0\x02\0\0\0\0\0\0\xb1\0\0\0\x05\0\x08\0\x65\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\
\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x01\x01\x1f\x02\0\0\0\0\x16\0\0\0\x03\x01\
\x1f\x02\x0f\x05\x1e\x03\x27\0\0\0\0\xde\xf7\x6c\xcd\x23\xb0\xb0\x77\x06\xe2\
\x8e\xd3\x92\x73\x67\xad\x3e\0\0\0\x01\x45\x40\xc4\xb1\xd6\x47\xa2\xd8\xc4\x8b\
\xfd\x18\x91\x08\x99\xbc\x48\0\0\0\x01\xea\xdf\x4a\x8b\xcf\x7a\xc4\xe7\xbd\x6d\
\x2c\xb6\x66\x45\x22\x42\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x15\x01\x05\x1c\
\x0a\x2f\x05\x16\x02\x44\x13\x05\x22\x21\x05\x0f\x06\x20\x05\x4d\x06\x23\x05\
\x1c\x1b\x05\x05\x33\x06\x03\x64\x2e\x06\x03\x1e\x20\x05\0\x06\x03\x62\x3c\x05\
\x05\x06\x03\x21\x20\x76\x02\x02\0\x01\x01\x2f\x6f\x70\x74\x2f\x64\x65\x76\x2f\
\x47\x75\x61\x72\x64\x69\x61\x6e\x57\x72\x61\x70\0\x2f\x75\x73\x72\x2f\x69\x6e\
\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x65\x62\x70\x66\x2f\x65\x78\x65\x63\x5f\
\x6c\x6f\x67\x67\x65\x72\x2e\x62\x70\x66\x2e\x63\0\x76\x6d\x6c\x69\x6e\x75\x78\
\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x01\0\0\x04\0\xf1\xff\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x09\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0f\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x19\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc0\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xe0\x02\
\0\0\0\0\0\0\x32\0\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x33\x01\0\
\0\x11\0\x07\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\xa0\x02\0\0\0\0\0\0\x01\0\0\0\
\x0c\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\
\x05\0\0\0\x15\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\
\x07\0\0\0\x23\0\0\0\0\0\0\0\x03\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x0c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x1c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x24\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x34\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x3c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x44\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x4c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x54\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x5c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x64\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x6c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x74\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x7c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x84\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x8c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x94\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x9c\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xa0\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\xa4\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xa8\0\0\0\0\0\0\0\x03\0\0\0\
\x06\0\0\0\xac\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x02\0\0\0\
\x0d\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0c\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\
\x02\0\0\0\x28\x02\0\0\0\0\0\0\x04\0\0\0\x0c\0\0\0\x40\x02\0\0\0\0\0\0\x04\0\0\
\0\x0d\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\xd0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xe0\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\xf0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x0c\x01\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\
\x02\0\0\0\x22\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\
\x0a\0\0\0\x32\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x47\0\0\0\0\0\0\0\x03\0\0\0\
\x0a\0\0\0\x5c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x76\0\0\0\0\0\0\0\x02\0\0\0\
\x02\0\0\0\x0b\x0c\x0d\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\x76\0\
\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x2e\
\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\x69\x73\x74\x73\0\x66\x69\x6c\x65\x5f\
\x6f\x70\x5f\x65\x76\x65\x6e\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\
\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x2e\x6d\x61\x70\x73\0\x2e\
\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\
\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\x64\
\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x72\
\x65\x6c\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x63\x61\x6c\
\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\0\x74\x72\
\x61\x63\x65\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\0\x2e\x6c\x6c\x76\x6d\
\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\
\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\
\x62\x75\x67\x5f\x66\x72\x61\x6d\x65\0\x65\x78\x65\x63\x5f\x6c\x6f\x67\x67\x65\
\x72\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\
\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\
\x2e\x72\x6f\x64\x61\x74\x61\x2e\x73\x74\x72\x31\x2e\x31\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1a\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xa3\x17\0\0\0\0\0\0\x4a\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x9d\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\
\xe0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x99\0\0\
\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf0\x12\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\x1b\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x3b\x01\0\0\x01\
\0\0\0\x32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x03\0\0\0\0\0\0\x05\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x58\0\0\0\x01\0\0\0\x03\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x28\x03\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdf\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x48\x03\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x4c\x03\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x74\x03\0\0\0\0\
\0\0\x4d\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8d\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc1\x04\0\0\0\0\0\0\x39\x02\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x89\0\0\0\x09\0\0\
\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x13\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1b\0\
\0\0\x0a\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x45\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\xfa\x06\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x41\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x50\x13\0\0\0\0\0\0\xa0\x02\0\0\0\0\0\0\x1b\0\0\0\x0c\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x5e\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\xaa\x07\0\0\0\0\0\0\x1d\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\x7d\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\x09\
\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x79\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf0\x15\0\0\0\0\0\0\
\x30\0\0\0\0\0\0\0\x1b\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x2e\
\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\x09\0\0\0\0\0\0\x5e\x05\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2a\x01\0\0\x09\
\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x16\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\
\x1b\0\0\0\x11\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x0f\0\0\0\0\0\0\x1c\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x40\x16\0\0\0\0\0\0\xe0\0\0\0\0\0\0\0\x1b\0\0\0\x13\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xfb\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x68\x10\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xf7\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\
\x17\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1b\0\0\0\x15\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\xeb\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x10\0\0\0\
\0\0\0\xb5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe7\
\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\x17\0\0\0\0\0\0\x60\0\0\
\0\0\0\0\0\x1b\0\0\0\x17\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x69\0\0\0\
\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x45\x11\0\0\0\0\0\0\x5a\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xd1\0\0\0\x03\x4c\xff\
\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xa0\x17\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\
\x1b\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\x01\0\0\x02\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa0\x11\0\0\0\0\0\0\x50\x01\0\0\0\0\0\0\x01\0\0\0\
\x0b\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";
}

#ifdef __cplusplus
struct exec_logger *exec_logger::open(const struct bpf_object_open_opts *opts) { return exec_logger__open_opts(opts); }
struct exec_logger *exec_logger::open_and_load() { return exec_logger__open_and_load(); }
int exec_logger::load(struct exec_logger *skel) { return exec_logger__load(skel); }
int exec_logger::attach(struct exec_logger *skel) { return exec_logger__attach(skel); }
void exec_logger::detach(struct exec_logger *skel) { exec_logger__detach(skel); }
void exec_logger::destroy(struct exec_logger *skel) { exec_logger__destroy(skel); }
const void *exec_logger::elf_bytes(size_t *sz) { return exec_logger__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
exec_logger__assert(struct exec_logger *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __EXEC_LOGGER_SKEL_H__ */
